/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

import { extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import PropTypes from 'prop-types';
import React__default from 'react';
import cx from 'classnames';
import { usePrefix } from '../../internal/usePrefix.js';
import { LowerHandle, UpperHandle } from './SliderHandles.js';

var _LowerHandle, _UpperHandle, _UpperHandle2, _LowerHandle2;
const SliderSkeleton = _ref => {
  let {
    hideLabel,
    className,
    twoHandles,
    ...rest
  } = _ref;
  const prefix = usePrefix();
  const isRtl = document?.dir === 'rtl';
  const containerClasses = cx(`${prefix}--slider-container`, `${prefix}--skeleton`, {
    [`${prefix}--slider-container--two-handles`]: twoHandles,
    [`${prefix}--slider-container--rtl`]: isRtl
  });
  const lowerThumbClasses = cx(`${prefix}--slider__thumb`, {
    [`${prefix}--slider__thumb--lower`]: twoHandles
  });
  const upperThumbClasses = cx(`${prefix}--slider__thumb`, {
    [`${prefix}--slider__thumb--upper`]: twoHandles
  });
  const lowerThumbWrapperClasses = cx(`${prefix}--slider__thumb-wrapper`, {
    [`${prefix}--slider__thumb-wrapper--lower`]: twoHandles
  });
  const upperThumbWrapperClasses = cx(`${prefix}--slider__thumb-wrapper`, {
    [`${prefix}--slider__thumb-wrapper--upper`]: twoHandles
  });
  return /*#__PURE__*/React__default.createElement("div", _extends({
    className: cx(`${prefix}--form-item`, className)
  }, rest), !hideLabel && /*#__PURE__*/React__default.createElement("span", {
    className: `${prefix}--label ${prefix}--skeleton`
  }), /*#__PURE__*/React__default.createElement("div", {
    className: containerClasses
  }, /*#__PURE__*/React__default.createElement("span", {
    className: `${prefix}--slider__range-label`
  }), /*#__PURE__*/React__default.createElement("div", {
    className: `${prefix}--slider`
  }, /*#__PURE__*/React__default.createElement("div", {
    className: `${prefix}--slider__track`
  }), /*#__PURE__*/React__default.createElement("div", {
    className: `${prefix}--slider__filled-track`
  }), /*#__PURE__*/React__default.createElement("div", {
    className: lowerThumbWrapperClasses
  }, /*#__PURE__*/React__default.createElement("div", {
    className: lowerThumbClasses
  }, twoHandles && !isRtl ? _LowerHandle || (_LowerHandle = /*#__PURE__*/React__default.createElement(LowerHandle, null)) : twoHandles && isRtl ? _UpperHandle || (_UpperHandle = /*#__PURE__*/React__default.createElement(UpperHandle, null)) : undefined)), twoHandles ? /*#__PURE__*/React__default.createElement("div", {
    className: upperThumbWrapperClasses
  }, /*#__PURE__*/React__default.createElement("div", {
    className: upperThumbClasses
  }, twoHandles && !isRtl ? _UpperHandle2 || (_UpperHandle2 = /*#__PURE__*/React__default.createElement(UpperHandle, null)) : twoHandles && isRtl ? _LowerHandle2 || (_LowerHandle2 = /*#__PURE__*/React__default.createElement(LowerHandle, null)) : undefined)) : undefined), /*#__PURE__*/React__default.createElement("span", {
    className: `${prefix}--slider__range-label`
  })));
};
SliderSkeleton.propTypes = {
  /**
   * Specify an optional className to add to the form item wrapper.
   */
  className: PropTypes.string,
  /**
   * Specify whether the label should be hidden, or not
   */
  hideLabel: PropTypes.bool,
  /**
   * Turn the slider into a range slider.
   */
  twoHandles: PropTypes.bool
};
var SliderSkeleton$1 = SliderSkeleton;

export { SliderSkeleton, SliderSkeleton$1 as default };
